---
import path from 'path';
import { contentDirectory, read, readAll } from 'src/lib/markdoc/read';
import PageMeta from 'src/components/PageMeta.astro';
import PageLayout from 'src/layouts/PageLayout.astro';
import Intro from 'src/components/Intro.astro';
import Renderer from 'src/components/Renderer.astro';
import { SITE_TITLE } from 'src/config';
import { defaultLang, i18n, languages } from 'src/i18n';
import { blog, staticPage } from 'src/lib/markdoc/frontmatter.schema';
import ArticlesList from 'src/components/ArticlesList.astro';

export async function getStaticPaths() {
  return Object.keys(languages).map((lang) => {
    return { params: { lang } };
  });
}

const { lang } = Astro.params;
const t = i18n.useTranslations(lang);

const { content, frontmatter } = await read({
  filepath: path.join(contentDirectory, lang || defaultLang, `index.md`),
  schema: staticPage,
});

const posts = await readAll({
  directory: `${lang}/articles`,
  frontmatterSchema: blog,
});

const sortedPosts = posts
  .filter(
    (p) => p.frontmatter.draft !== true && p.frontmatter.featured === true
  )
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  )
  .map(({ content, ...post }) => post);
---

<PageLayout>
  <PageMeta
    title={`${frontmatter.title} | ${SITE_TITLE}`}
    description={frontmatter.description}
    slot="meta"
  />
  <Fragment slot="main">
    <Intro />
    <Renderer content={content} />
    <ArticlesList posts={sortedPosts} />
  </Fragment>
</PageLayout>
